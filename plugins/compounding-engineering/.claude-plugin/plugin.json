{
  "name": "compounding-engineering",
  "version": "1.0.0",
  "description": "AI-powered development tools that get smarter with every use. Make each unit of engineering work easier than the last. Includes 15 specialized agents, 6 commands, and automated hooks.",
  "author": {
    "name": "Kieran Klaassen",
    "url": "https://github.com/kieranklaassen"
  },
  "homepage": "https://github.com/EveryInc/compounding-engineering",
  "repository": {
    "type": "git",
    "url": "https://github.com/EveryInc/compounding-engineering.git"
  },
  "keywords": [
    "ai-powered",
    "compounding-engineering",
    "workflow-automation",
    "code-review",
    "quality",
    "knowledge-management",
    "agents"
  ],
  "license": "MIT",
  "every-env": {
    "compatible": true,
    "min_version": "1.0.0"
  },
  "dependencies": {
    "claude-code": ">=1.0.0"
  },
  "components": {
    "agents": 15,
    "commands": 6,
    "hooks": 2
  },
  "agents": {
    "reviewers": [
      {
        "name": "kieran-rails-reviewer",
        "description": "Super senior Rails reviewer with exceptionally high bar for code quality",
        "use_cases": ["code-review", "refactoring", "architecture"]
      },
      {
        "name": "dhh-rails-reviewer",
        "description": "Rails reviewer following DHH's principles and conventions",
        "use_cases": ["rails-conventions", "simplicity", "architecture"]
      },
      {
        "name": "code-simplicity-reviewer",
        "description": "Reviews code for simplicity and maintainability",
        "use_cases": ["refactoring", "complexity", "maintainability"]
      }
    ],
    "quality": [
      {
        "name": "security-sentinel",
        "description": "Security-focused code reviewer",
        "use_cases": ["security", "vulnerabilities", "best-practices"]
      },
      {
        "name": "performance-oracle",
        "description": "Performance optimization and N+1 query detection",
        "use_cases": ["performance", "optimization", "database"]
      }
    ],
    "architecture": [
      {
        "name": "architecture-strategist",
        "description": "High-level architecture review and design",
        "use_cases": ["architecture", "design", "patterns"]
      },
      {
        "name": "pattern-recognition-specialist",
        "description": "Identifies and suggests design patterns",
        "use_cases": ["patterns", "refactoring", "design"]
      },
      {
        "name": "data-integrity-guardian",
        "description": "Database schema and data integrity reviewer",
        "use_cases": ["database", "migrations", "integrity"]
      }
    ],
    "workflow": [
      {
        "name": "pr-comment-resolver",
        "description": "Resolves PR comments and feedback",
        "use_cases": ["pull-requests", "code-review", "collaboration"]
      },
      {
        "name": "git-history-analyzer",
        "description": "Analyzes git history and commit patterns",
        "use_cases": ["git", "history", "analysis"]
      }
    ],
    "research": [
      {
        "name": "repo-research-analyst",
        "description": "Deep repository research and analysis",
        "use_cases": ["research", "codebase", "documentation"]
      },
      {
        "name": "best-practices-researcher",
        "description": "Researches and applies best practices",
        "use_cases": ["best-practices", "research", "standards"]
      },
      {
        "name": "framework-docs-researcher",
        "description": "Searches framework documentation",
        "use_cases": ["documentation", "rails", "frameworks"]
      }
    ],
    "specialized": [
      {
        "name": "every-style-editor",
        "description": "Enforces Every writing style guide",
        "use_cases": ["copy", "writing", "style-guide"]
      },
      {
        "name": "feedback-codifier",
        "description": "Converts feedback into actionable tasks",
        "use_cases": ["feedback", "tasks", "planning"]
      }
    ]
  },
  "commands": {
    "workflow": [
      "triage",
      "work",
      "generate_command",
      "plan",
      "review",
      "resolve_todo_parallel"
    ]
  },
  "hooks": {
    "pre_tool_use": [
      {
        "name": "block-main-push",
        "description": "Prevents accidental pushes to main branch",
        "matcher": "Bash",
        "command": "hooks/block-main-push.rb"
      },
      {
        "name": "run-linter",
        "description": "Runs linter before certain operations",
        "matcher": "Bash",
        "command": "hooks/run-linter.rb"
      }
    ]
  },
  "settings": {
    "permissions": {
      "bash_commands": [
        "ast-grep",
        "bin/brakeman",
        "bin/dev",
        "bin/rails",
        "bin/rubocop",
        "bundle",
        "find",
        "gem",
        "gh",
        "git",
        "grep",
        "mkdir",
        "node",
        "npm",
        "psql",
        "rake",
        "rg",
        "rm",
        "ruby",
        "yarn"
      ],
      "web_fetch_domains": [
        "docs.anthropic.com",
        "discuss.rubyonrails.org",
        "edgeguides.rubyonrails.org",
        "github.com",
        "localhost"
      ]
    }
  },
  "configuration": {
    "default_agent": "claude",
    "project_type": "rails",
    "signals": [
      "package.json",
      "Gemfile",
      "bin/rails",
      "config/application.rb",
      "app/controllers",
      "app/models",
      "app/views"
    ]
  }
}
